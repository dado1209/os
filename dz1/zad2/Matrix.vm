function Matrix.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop static 1
push constant 0
pop this 0
push constant 0
pop this 1
push argument 0
push argument 0
call Math.multiply 2
call Array.new 1
pop this 3
label WHILE_EXP0
push this 0
push argument 0
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push this 1
push argument 0
lt
not
if-goto WHILE_END1
push argument 0
push this 0
call Math.multiply 2
push this 1
add
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 1
push constant 1
add
pop this 1
goto WHILE_EXP1
label WHILE_END1
push this 0
push constant 1
add
pop this 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Matrix.print 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push constant 0
pop local 0
push static 1
pop static 0
label WHILE_EXP0
push local 0
push static 0
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 1
push static 0
lt
not
if-goto WHILE_END1
push static 0
push local 0
call Math.multiply 2
push local 1
add
push this 3
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push local 0
push constant 1
add
pop local 0
push constant 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
call Output.println 0
pop temp 0
push constant 0
return
function Matrix.get 0
push argument 0
pop pointer 0
push static 1
push argument 1
call Math.multiply 2
push argument 2
add
push this 3
add
pop pointer 1
push that 0
return
function Matrix.set 0
push argument 0
pop pointer 0
push argument 1
push static 1
call Math.multiply 2
push argument 2
add
push this 3
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Matrix.size 0
push argument 0
pop pointer 0
push static 1
return
function Matrix.getArray 0
push argument 0
pop pointer 0
push this 3
return
function Matrix.add 5
push argument 0
pop pointer 0
push constant 0
pop local 4
push constant 0
pop local 3
push this 3
pop local 1
push argument 1
call Matrix.getArray 1
pop local 2
push static 1
call Matrix.new 1
pop local 0
label WHILE_EXP0
push local 3
push static 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 4
push static 1
lt
not
if-goto WHILE_END1
push local 0
push local 3
push local 4
push local 3
push static 1
call Math.multiply 2
push local 4
add
push local 1
add
pop pointer 1
push that 0
push local 3
push static 1
call Math.multiply 2
push local 4
add
push local 2
add
pop pointer 1
push that 0
add
call Matrix.set 4
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push local 3
push constant 1
add
pop local 3
push constant 0
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Matrix.multScalar 5
push argument 0
pop pointer 0
push constant 0
pop local 4
push constant 0
pop local 3
push this 3
pop local 1
push static 1
call Matrix.new 1
pop local 0
label WHILE_EXP0
push local 3
push static 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 4
push static 1
lt
not
if-goto WHILE_END1
push local 0
push local 3
push local 4
push local 3
push static 1
call Math.multiply 2
push local 4
add
push local 1
add
pop pointer 1
push that 0
push argument 1
call Math.multiply 2
call Matrix.set 4
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push local 3
push constant 1
add
pop local 3
push constant 0
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Matrix.multMat 7
push argument 0
pop pointer 0
push constant 0
pop local 4
push constant 0
pop local 3
push constant 0
pop local 6
push this 3
pop local 1
push argument 1
call Matrix.getArray 1
pop local 2
push static 1
call Matrix.new 1
pop local 0
label WHILE_EXP0
push local 3
push static 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 4
push static 1
lt
not
if-goto WHILE_END1
call Output.println 0
pop temp 0
push constant 0
pop local 5
label WHILE_EXP2
push local 6
push static 1
lt
not
if-goto WHILE_END2
push local 5
push local 3
push static 1
call Math.multiply 2
push local 6
add
push local 1
add
pop pointer 1
push that 0
push local 6
push static 1
call Math.multiply 2
push local 4
add
push local 2
add
pop pointer 1
push that 0
call Math.multiply 2
add
pop local 5
push local 6
push constant 1
add
pop local 6
goto WHILE_EXP2
label WHILE_END2
push local 0
push local 3
push local 4
push local 5
call Matrix.set 4
pop temp 0
push constant 0
pop local 6
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push local 3
push constant 1
add
pop local 3
push constant 0
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Matrix.norm 5
push argument 0
pop pointer 0
push constant 0
pop local 4
push constant 0
pop local 3
push constant 0
pop local 2
push this 3
pop local 0
label WHILE_EXP0
push local 2
push static 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 3
push static 1
lt
not
if-goto WHILE_END1
push local 4
push local 2
push static 1
call Math.multiply 2
push local 3
add
push local 0
add
pop pointer 1
push that 0
push local 2
push static 1
call Math.multiply 2
push local 3
add
push local 0
add
pop pointer 1
push that 0
call Math.multiply 2
add
pop local 4
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 2
push constant 1
add
pop local 2
push constant 0
pop local 3
goto WHILE_EXP0
label WHILE_END0
push local 4
call Math.sqrt 1
return
function Matrix.eye 2
push argument 0
call Matrix.new 1
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push argument 0
lt
not
if-goto WHILE_END0
push local 0
push local 1
push local 1
push constant 1
call Matrix.set 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
