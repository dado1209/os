/**
 * A basic math library.
 */
class Math {
    static int powers_of_two;
    
    /** Initializes the library. */
    function void init() {
        let powers_of_two = Array.new(16);
        let powers_of_two[0] = 1;
        let powers_of_two[1] = 2;
        let powers_of_two[2] = 4;
        let powers_of_two[3] = 8;
        let powers_of_two[4] = 16;
        let powers_of_two[5] = 32;
        let powers_of_two[6] = 64;
        let powers_of_two[7] = 128;
        let powers_of_two[8] = 256;
        let powers_of_two[9] = 512;
        let powers_of_two[10] = 1024;
        let powers_of_two[11] = 2048;
        let powers_of_two[12] = 4096;
        let powers_of_two[13] = 8192;
        let powers_of_two[14] = 16384;
        let powers_of_two[15] = 16384+16384;
        return;
    }

    function boolean bit(int x, int n) {
        return ~((x & powers_of_two[n]) = 0);
    }
    
    function int two_to_the(int power) {
        return powers_of_two[power];
    }
    function int log(int x){
        var int i,k,res;
        let i=0;
        let k=0;
        while(k=0){
            let res=powers_of_two[i];
            if(res>x){
                let k=1;
            }
            else{
                let i=i+1;
            }
        }
        return i-1;
    }
    function boolean even(int n){
        var int i;
        var boolean even;
        let i=0;
        let even=1;
        while(i<n){
            let i=i+1;
            let even=~even;
        }
        return even;

    }
    function int pow(int a, int b){
        if(b=0){
            return  1;
        }
        else{
        if(Math.even(b)=1){
            return Math.pow(a*a,b/2);

        }
        else{
            return a*Math.pow(a*a,(b-1)/2);
        }
        }
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if( x < 0 ) {
            let x = -x;
        }
        return x;
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
        var int sum, shiftedX;
        var int j;
        
        let sum = 0;
        let shiftedX = x;
        let j = 0;
        while( j < 16 ) {   // 16-bit numbers
            if(Math.bit(y, j)) {
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
            let j = j + 1;
        }
        return sum;
    }
    
    /** Returns the integer part of x/y. */
    function int divide(int x, int y) {
        var int q,r,x1,y1;
        let x1=Math.abs(x);
        let y1=Math.abs(y);
        if(y1>x1){
            return 0;
        }
        let q=Math.divide(x1,2*y1);
        if((x1-(2*q*y1))<y1){
            let r= 2*q;
        }
        else{
            let r=2*q+1;
        }
        if(~(x=x1) | ~(y=y1))
        {

            if( ~(x=x1) & ~(y=y1)){
                return r;
            }
            else{
                return -r;
            }
        }
        else{
            return r;
        }


    }
    
    /** Returns the remainder part of x/y */
    function int mod(int x, int y) {
        var int q;
        
        let q = Math.divide(x, y);
        return x - (q*y);
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int j, y;
        var int approx;
        var int approx_squared;
        
        let y = 0;
        let j = 7;      // = #bits / 2 - 1
        while( ~(j < 0) ) {
            let approx = y + powers_of_two[j];
            let approx_squared = approx * approx;
            if( ~(approx_squared > x) & (approx_squared > 0) ) {    // in case of overflow
                let y = approx;
            }
            let j = j - 1;
        }
        return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if( a > b ) {
            return a;
        }
        else {
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if( a < b ) {
            return a;
        }
        else {
            return b;
        }
    }
}